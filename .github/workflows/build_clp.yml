name: Build Coin-OR Clp

on:
  push:
  release:
    types: [created]
    
jobs:

  build_linux_22:
    strategy:
      matrix:
        os: [
          {image: ubuntu-22.04, glibc: "2.35"},
          {image: ubuntu-24.04, glibc: "2.39"}
        ]
      fail-fast: false
    runs-on: ${{ matrix.os.image }}
    
    steps:
    - uses: actions/checkout@v4
    - name: Compile CoinUtils
      run: |
        wget https://github.com/coin-or/CoinUtils/archive/refs/tags/releases/2.11.12.tar.gz
        tar -zxf 2.11.12.tar.gz
        cd CoinUtils-releases-2.11.12
        ./configure --enable-static
        make -j 4
        sudo make install
    
    - name: Compile OSI
      run: |
        wget https://github.com/coin-or/Osi/archive/refs/tags/releases/0.108.11.tar.gz
        tar -zxf 0.108.11.tar.gz
        cd Osi-releases-0.108.11
        ./configure --enable-static --with-coinutils-lib=${{ github.workspace }}/CoinUtils-releases-2.11.12/lib/libCoinUtils.la --with-coinutils-incdir=${{ github.workspace }}/CoinUtils-releases-2.11.12/include/coin/
        make -j 4
        sudo make install
    
    - name: Compile Clp
      run: |
        wget https://github.com/coin-or/Clp/archive/refs/tags/releases/1.17.10.tar.gz
        tar -zxf 1.17.10.tar.gz
        cd Clp-releases-1.17.10
        ./configure --enable-static \
          --with-coinutils-lib=${{ github.workspace }}/CoinUtils-releases-2.11.12/lib/libCoinUtils.la \
          --with-coinutils-incdir=${{ github.workspace }}/CoinUtils-releases-2.11.12/include/coin/ \
          --with-osi-lib=${{ github.workspace }}/Osi-releases-0.108.11/lib/libOsi.la \
          --with-osi-incdir=${{ github.workspace }}/Osi-releases-0.108.11/include/coin/
        make -j 4
        sudo make install
        mkdir package
        cd package
        cp -r ${{ github.workspace }}/Clp-releases-1.17.10/lib .
        cp -r ${{ github.workspace }}/CoinUtils-releases-2.11.12/lib/* lib/
        cp -r ${{ github.workspace }}/Osi-releases-0.108.11/lib/* lib/
        cp -r ${{ github.workspace }}/Clp-releases-1.17.10/include .
        cp -r ${{ github.workspace }}/CoinUtils-releases-2.11.12/include/* include/
        cp -r ${{ github.workspace }}/Osi-releases-0.108.11/include/* include/
        tar -zcvf ../Clp-1.17.10-linux64-glibc${{ matrix.os.glibc }}.tar.gz *
        
    - uses: actions/upload-artifact@v4
      with:
        name: Clp-1.17.10-linux64-glibc${{ matrix.os.glibc }}
        path: ${{ github.workspace }}Z/Clp-releases-1.17.10/package/*
          
    - uses: actions/upload-release-asset@v1
      if: github.event_name == 'release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: Clp-1.17.10-linux64-glibc${{ matrix.os.glibc }}.tar.gz
        asset_path: /home/runner/work/intracellular_libs/intracellular_libs/Clp-releases-1.17.10/Clp-1.17.10-linux64-glibc${{ matrix.os.glibc }}.tar.gz
        asset_content_type: application/gzip       
        
  build_macosx:
    strategy:
      matrix:
        os: [
          {image: macos-13, gcc: "12", macosx_deployment_target: "13.0", name: osx-x86_64}, 
          {image: macos-14, gcc: "13", macosx_deployment_target: "14.0", name: osx-14-arm64}, 
          {image: macos-15, gcc: "14", macosx_deployment_target: "15.0", name: osx-15-arm64}
        ]
      fail-fast: false
    runs-on: ${{ matrix.os.image }}
    env:
      CC: gcc-${{ matrix.os.gcc }}
      CXX: g++-${{ matrix.os.gcc }}
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.os.macosx_deployment_target }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run : |
        brew install libxml2 openblas lapack
    
    - name: Compile CoinUtils
      run: |
        wget https://github.com/coin-or/CoinUtils/archive/refs/tags/releases/2.11.12.tar.gz
        tar -zxf 2.11.12.tar.gz
        cd CoinUtils-releases-2.11.12
        ./configure --enable-static
        make -j 4
        sudo make install
    
    - name: Compile OSI
      run: |
        wget https://github.com/coin-or/Osi/archive/refs/tags/releases/0.108.11.tar.gz
        tar -zxf 0.108.11.tar.gz
        cd Osi-releases-0.108.11
        ./configure --enable-static \
          --with-coinutils-lib=${{ github.workspace }}/CoinUtils-releases-2.11.12/lib/libCoinUtils.la \
          --with-coinutils-incdir=${{ github.workspace }}/CoinUtils-releases-2.11.12/include/coin/
        make -j 4
        sudo make install
    
    - name: Compile Clp
      run: |
        wget https://github.com/coin-or/Clp/archive/refs/tags/releases/1.17.10.tar.gz
        tar -zxf 1.17.10.tar.gz
        cd Clp-releases-1.17.10
        ./configure --enable-static \
          --with-coinutils-lib=${{ github.workspace }}/CoinUtils-releases-2.11.12/lib/libCoinUtils.la \
          --with-coinutils-incdir=${{ github.workspace }}/CoinUtils-releases-2.11.12/include/coin/ \
          --with-osi-lib=${{ github.workspace }}/Osi-releases-0.108.11/lib/libOsi.la \
          --with-osi-incdir=${{ github.workspace }}/Osi-releases-0.108.11/include/coin/
        make -j 4
        sudo make install
        mkdir package
        cd package
        cp -r ${{ github.workspace }}/Clp-releases-1.17.10/lib .
        cp -r ${{ github.workspace }}/CoinUtils-releases-2.11.12/lib/* lib/
        cp -r ${{ github.workspace }}/Osi-releases-0.108.11/lib/* lib/
        cp -r ${{ github.workspace }}/Clp-releases-1.17.10/include .
        cp -r ${{ github.workspace }}/CoinUtils-releases-2.11.12/include/* include/
        cp -r ${{ github.workspace }}/Osi-releases-0.108.11/include/* include/
        tar -zcvf ../Clp-1.17.10-${{ matrix.os.name }}.tar.gz *

    - uses: actions/upload-artifact@v4
      with:
        name: Clp-1.17.10-${{ matrix.os.name }}
        path: ${{ github.workspace }}/Clp-releases-1.17.10/package/*
        
    - uses: actions/upload-release-asset@v1
      if: github.event_name == 'release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: Clp-1.17.10-${{ matrix.os.name }}.tar.gz
        asset_path: ${{ github.workspace }}/Clp-releases-1.17.10/Clp-1.17.10-${{ matrix.os.name }}.tar.gz
        asset_content_type: application/gzip

  build_windows:
    strategy:
      matrix:
        os: [
          {image: windows-2022, disk: d, name: 2022},
          {image: windows-2025, disk: c, name: 2025}
        ]
      fail-fast: false
    runs-on: ${{ matrix.os.image }}
    
    defaults:
      run:
        shell: msys2 {0}
        
    steps:
    - uses: actions/checkout@v4
    
    - uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        update: true
        install: make mingw-w64-x86_64-gcc mingw-w64-x86_64-gcc-libs mingw-w64-x86_64-toolchain mingw-w64-x86_64-python-pip mingw-w64-x86_64-python-numpy mingw-w64-x86_64-lapack mingw-w64-x86_64-openblas mingw-w64-x86_64-libxml2 mingw-w64-x86_64-bzip2 mingw-w64-x86_64-libdeflate mingw-w64-x86_64-blas mingw-w64-x86_64-cblas mingw-w64-x86_64-lapack mingw-w64-x86_64-lapacke
        
    
    - name: Compile CoinUtils
      run: |
        wget https://github.com/coin-or/CoinUtils/archive/refs/tags/releases/2.11.12.tar.gz
        tar -zxf 2.11.12.tar.gz
        cd CoinUtils-releases-2.11.12
        ./configure --enable-static --prefix=/${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/CoinUtils-releases-2.11.12
        make -j 4
        make install
        
    - name: Compile OSI
      run: |
        wget https://github.com/coin-or/Osi/archive/refs/tags/releases/0.108.11.tar.gz
        tar -zxf 0.108.11.tar.gz
        cd Osi-releases-0.108.11
        ./configure --enable-static \
          --prefix=/${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/Osi-releases-0.108.11 \
          --with-coinutils-lib=/${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/CoinUtils-releases-2.11.12/lib/libCoinUtils.la \
          --with-coinutils-incdir=/${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/CoinUtils-releases-2.11.12/include/coin
        make -j 4
        make install

    - name: Compile Clp
      run: |
        wget https://github.com/coin-or/Clp/archive/refs/tags/releases/1.17.10.tar.gz
        tar -zxf 1.17.10.tar.gz
        cd Clp-releases-1.17.10
        ./configure --enable-static \
          --prefix=/${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/Clp-releases-1.17.10 \
          --with-coinutils-lib=/${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/CoinUtils-releases-2.11.12/lib/libCoinUtils.la \
          --with-coinutils-incdir=/${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/CoinUtils-releases-2.11.12/include/coin \
          --with-osi-lib=/${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/Osi-releases-0.108.11/lib/libOsi.la \
          --with-osi-incdir=/${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/Osi-releases-0.108.11/include/coin
        make -j 4
        make install
        mkdir package
        cd package
        cp -r /${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/Clp-releases-1.17.10/lib .
        cp -r /${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/CoinUtils-releases-2.11.12/lib/* lib/
        cp -r /${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/Osi-releases-0.108.11/lib/* lib/
        cp -r /${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/Clp-releases-1.17.10/include .
        cp -r /${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/CoinUtils-releases-2.11.12/include/* include/
        cp -r /${{ matrix.os.disk }}/a/intracellular_libs/intracellular_libs/Osi-releases-0.108.11/include/* include/
        tar -zcvf ../Clp-1.17.10-win64-${{ matrix.os.name }}.tar.gz *

    - uses: actions/upload-artifact@v4
      with:
        name: Clp-1.17.10-win64-${{ matrix.os.name }}
        path: ${{ github.workspace }}\Clp-releases-1.17.10\package\*

    - uses: actions/upload-release-asset@v1
      if: github.event_name == 'release'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_name: Clp-1.17.10-win64-${{ matrix.os.name }}.tar.gz
        asset_path: ${{ github.workspace }}\Clp-releases-1.17.10\Clp-1.17.10-win64-${{ matrix.os.name }}.tar.gz
        asset_content_type: application/gzip
